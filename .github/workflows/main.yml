name: CI

on:
  push:
    branches:
      - main
      - develop
      - fleet-enhancements
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  CACHE_VERSION: v1

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.CACHE_VERSION }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.CACHE_VERSION }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run unit tests with coverage
        run: |
          mkdir -p test_results
          pytest tests/unit/ \
            --cov=./ \
            --cov-report=xml \
            --cov-report=html \
            --junitxml=test_results/unit-test-results.xml \
            --html=test_results/unit-report.html \
            --self-contained-html

      - name: Display test results summary
        if: always()
        run: |
          echo "## ✅ Unit Test Summary" >> $GITHUB_STEP_SUMMARY
          ls -lh test_results/ >> $GITHUB_STEP_SUMMARY

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Unit Tests
          path: test_results/unit-test-results.xml
          reporter: java-junit
          fail-on-error: false

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-coverage-report
          path: |
            coverage.xml
            htmlcov/

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: unit-test-results
          path: test_results/

  selenium-tests:
    runs-on: ubuntu-latest
    name: Selenium UI Tests
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.CACHE_VERSION }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.CACHE_VERSION }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest selenium

      - name: Install Chrome
        run: |
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Start Xvfb (for headless browser)
        run: |
          sudo apt-get install -y xvfb
          Xvfb :99 & export DISPLAY=:99

      - name: Run Selenium tests
        env:
          DISPLAY: :99
        run: |
          mkdir -p test_results
          pytest tests/selenium/ \
            --junitxml=test_results/selenium-test-results.xml \
            --html=test_results/selenium-report.html \
            --self-contained-html

      - name: Display test results summary
        if: always()
        run: |
          echo "## ✅ Selenium Test Summary" >> $GITHUB_STEP_SUMMARY
          ls -lh test_results/ >> $GITHUB_STEP_SUMMARY

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Selenium UI Tests
          path: test_results/selenium-test-results.xml
          reporter: java-junit
          fail-on-error: false

      - name: Upload Selenium test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: selenium-test-results
          path: test_results/

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            try {
              let comment = `## 🌐 Selenium Test Results - Run #${{ github.run_number }}\n\n`;
              const xmlPath = path.join('test_results', 'selenium-test-results.xml');
              if (fs.existsSync(xmlPath)) {
                const xml = fs.readFileSync(xmlPath, 'utf8');
                const total = parseInt(xml.match(/tests="(\d+)"/)?.[1] || '0', 10);
                const failures = parseInt(xml.match(/failures="(\d+)"/)?.[1] || '0', 10);
                const errors = parseInt(xml.match(/errors="(\d+)"/)?.[1] || '0', 10);
                const passed = total - failures - errors;

                comment += `**Summary**: ${passed}/${total} tests passed `;
                comment += (failures > 0 || errors > 0)
                  ? `❌ (${failures} failures, ${errors} errors)\n\n`
                  : `✅\n\n`;
              } else {
                comment += `❌ **No test results found**\n\n`;
              }
              comment += `📊 **View Details**: [Test Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n`;
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Error posting comment:', error);
            } 