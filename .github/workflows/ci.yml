name: CI/CD Pipeline with Inline Reports

on:
  push:
    branches:
      - main
      - fleet-enhancements
  pull_request:
    branches:
      - main
      - fleet-enhancements

# ... (Previous sections like env, unit-tests, selenium-tests jobs remain unchanged)

jobs:
  generate-report:
    runs-on: ubuntu-latest
    name: Generate Comprehensive Report
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Debug artifact structure
        run: |
          echo "=== Artifact Structure ==="
          find artifacts -type f -name "*.xml" | head -20
          echo "=== Directory Structure ==="
          ls -la artifacts/
          echo "=== Test Results Files ==="
          find artifacts -name "*test-results.xml" -exec ls -la {} \;

      - name: Generate comprehensive report
        run: |
          echo "# üìä Comprehensive Test Report - Run #${{ github.run_number }}" > report.md
          echo "" >> report.md
          echo "Generated on: $(date)" >> report.md
          echo "" >> report.md

          # Process unit tests
          xml_file="artifacts/test-results-3.11/test_results/unit-test-results.xml"
          if [ -f "$xml_file" ]; then
            echo "### üêç Python 3.11 Unit & Integration Tests" >> report.md
            python3 scripts/generate_unit_report.py >> report.md
          else
            echo "‚ö†Ô∏è No unit test results found for Python 3.11" >> report.md
            echo "" >> report.md
          fi

          # Process Selenium tests
          selenium_xml="artifacts/selenium-test-results/test_results/selenium-test-results.xml"
          if [ -f "$selenium_xml" ]; then
            echo "### üåê Selenium UI Tests" >> report.md
            python3 scripts/generate_selenium_report.py >> report.md
          else
            echo "‚ö†Ô∏è No Selenium test results found" >> report.md
            echo "" >> report.md
          fi

          # Summary Table
          echo "### üìã Summary Table" >> report.md
          echo "| Category | Total Tests | Passed ‚úÖ | Failed ‚ùå | Errors üî• | Pass Rate | Coverage |" >> report.md
          echo "|----------|-------------|-----------|-----------|-----------|-----------|----------|" >> report.md
          if [ -f /tmp/unit_3.11.txt ]; then
            IFS=',' read total passed failed errors coverage < /tmp/unit_3.11.txt
            passrate=0
            if [ "$total" -gt 0 ]; then passrate=$((passed * 100 / total)); fi
            echo "| Unit & Integration | $total | $passed | $failed | $errors | ${passrate}% | ${coverage}% |" >> report.md
          fi
          if [ -f /tmp/selenium.txt ]; then
            IFS=',' read total passed failed errors < /tmp/selenium.txt
            passrate=0
            if [ "$total" -gt 0 ]; then passrate=$((passed * 100 / total)); fi
            echo "| UI Tests | $total | $passed | $failed | $errors | ${passrate}% | N/A |" >> report.md
          fi
          if [ -f /tmp/unit_3.11.txt ] && [ -f /tmp/selenium.txt ]; then
            IFS=',' read utotal upassed ufailed uerrors ucoverage < /tmp/unit_3.11.txt
            IFS=',' read stotal spassed sfailed serrors < /tmp/selenium.txt
            gtotal=$((utotal + stotal))
            gpassed=$((upassed + spassed))
            gfailed=$((ufailed + sfailed))
            gerrors=$((uerrors + serrors))
            gpassrate=0
            if [ "$gtotal" -gt 0 ]; then gpassrate=$((gpassed * 100 / gtotal)); fi
            echo "| **Total** | **$gtotal** | **$gpassed** | **$gfailed** | **$gerrors** | **${gpassrate}%** | N/A |" >> report.md
          fi
          echo "" >> report.md
          echo "## üéØ Overall Summary" >> report.md
          echo "" >> report.md
          echo "### üîó Detailed Reports" >> report.md
          echo "- [Unit & Integration Test Results (Python 3.11)](https://github.com/growwithgrepx/transPort/actions/runs/${{ github.run_id }}/artifacts)" >> report.md
          echo "- [Selenium UI Test Results](https://github.com/growwithgrepx/transPort/actions/runs/${{ github.run_id }}/artifacts)" >> report.md
          echo "- [Coverage Report](https://growwithgrepx.github.io/growwithgrepx/transPort/coverage/fleet-enhancements/index.html)" >> report.md

      - name: Display report content
        run: |
          echo "=== Generated Report Content ==="
          cat report.md

      - name: Generate step summary (Pipeline Summary First)
        run: |
          echo "## üìä Pipeline Summary" > $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          cat report.md >> $GITHUB_STEP_SUMMARY

      - name: Comment PR with comprehensive report
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            try {
              const report = fs.readFileSync('report.md', 'utf8');
              const repoUrl = `https://github.com/${context.repo.owner}/${context.repo.repo}`;
              const runUrl = `${repoUrl}/actions/runs/${context.runId}`;
              const branch = context.ref.replace('refs/heads/', '');
              const fullReport = report + [
                '',
                '## üîó Quick Links',
                `- üìä [View Full Pipeline Results](${runUrl})`,
                `- üìà [Coverage Report](https://${context.repo.owner}.github.io/${context.repo.repo}/coverage/${branch}/index.html)`,
                `- üìÅ [Download All Artifacts](${runUrl}/artifacts)`,
                `- üè† [Repository](${repoUrl})`,
                '',
                '---',
                '*This report was automatically generated by the CI/CD pipeline*'
              ].join('\n');
              await github.rest.issues.createComment({
                ...context.issue,
                body: fullReport
              });
            } catch (error) {
              console.error('Error posting comprehensive report:', error);
              console.error('Error details:', error.message);
            }