name: CI/CD Pipeline with Inline Reports

on:
  push:
    branches:
      - main
      - develop
      - fleet-enhancements
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  FLASK_ENV: testing
  REPORT_FILE: report.md

jobs:
  ci-pipeline:
    name: Run Tests & Generate Report
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest pytest-cov selenium

      - name: Run Python Unit & Integration Tests
        id: pytests
        run: |
          mkdir -p test_results
          pytest \
            --junitxml=test_results/unit-test-results.xml \
            --cov=. --cov-report html:tests/reports/htmlcov/unit \
            tests/
      - name: Archive Python test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-python
          path: |
            test_results/unit-test-results.xml
            tests/reports/htmlcov/unit

      - name: Run Selenium UI Tests
        id: seltests
        run: |
          mkdir -p ui_test_results
          pytest \
            --junitxml=ui_test_results/selenium-test-results.xml \
            tests/ui/
      - name: Archive Selenium test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-selenium
          path: |
            ui_test_results/selenium-test-results.xml

      - name: Generate Comprehensive Report
        run: |
          # Start fresh
          echo "## 📊 Pipeline Summary" > $REPORT_FILE
          echo "" >> $REPORT_FILE

          # 1) Python tests summary
          echo "### ✅ Unit & Integration Test Summary - Python $PYTHON_VERSION" >> $REPORT_FILE
          python3 << EOF >> $REPORT_FILE
import xml.etree.ElementTree as ET
import sys
path = "test_results/unit-test-results.xml"
try:
  tree = ET.parse(path)
  root = tree.getroot()
  if root.tag == 'testsuites':
    total = sum(int(suite.get('tests',0)) for suite in root.findall('testsuite'))
    passed= sum(int(suite.get('tests',0)) - int(suite.get('failures',0)) - int(suite.get('errors',0)) for suite in root.findall('testsuite'))
    failed= sum(int(suite.get('failures',0)) for suite in root.findall('testsuite'))
    errors= sum(int(suite.get('errors',0)) for suite in root.findall('testsuite'))
  else:
    total = int(root.get('tests',0))
    failed= int(root.get('failures',0))
    errors= int(root.get('errors',0))
    passed= total - failed - errors
  print(f"Total Tests: {total}")
  print(f"Passed: {passed} ✅")
  print(f"Failed: {failed} ❌")
  print(f"Errors: {errors} 🔥")
except FileNotFoundError:
  print("Total Tests: 0")
  print("Passed: 0 ✅")
  print("Failed: 0 ❌")
  print("Errors: 0 🔥")
EOF
          echo "" >> $REPORT_FILE

          # 2) Selenium tests summary
          echo "### 🌐 Selenium UI Test Summary" >> $REPORT_FILE
          python3 << EOF >> $REPORT_FILE
import xml.etree.ElementTree as ET
path = "ui_test_results/selenium-test-results.xml"
try:
  root = ET.parse(path).getroot()
  total = int(root.get('tests',0))
  failed= int(root.get('failures',0))
  errors= int(root.get('errors',0))
  passed= total - failed - errors
  print(f"Total Tests: {total}")
  print(f"Passed: {passed} ✅")
  print(f"Failed: {failed} ❌")
  print(f"Errors: {errors} 🔥")
except FileNotFoundError:
  print("Total Tests: 0")
  print("Passed: 0 ✅")
  print("Failed: 0 ❌")
  print("Errors: 0 🔥")
EOF
          echo "" >> $REPORT_FILE

          # 3) Detailed reports links
          echo "### 🔗 Detailed Reports" >> $REPORT_FILE
          echo "- [Unit HTML Coverage](tests/reports/htmlcov/unit/index.html)" >> $REPORT_FILE
          echo "- [JUnit XML (Python)](test_results/unit-test-results.xml)" >> $REPORT_FILE
          echo "- [JUnit XML (Selenium)](ui_test_results/selenium-test-results.xml)" >> $REPORT_FILE
          echo "" >> $REPORT_FILE

      - name: Upload final report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pipeline-report
          path: ${{ env.REPORT_FILE }}
