name: Backend CI

on:
  push:
    branches: [fleet-enhancements]
  pull_request:
    branches: [fleet-enhancements]

jobs:
  python-tests:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest --junitxml=test-results.xml -v

      - name: Display test results
        if: always()
        run: |
          echo "## 🧪 Backend Test Results" >> $GITHUB_STEP_SUMMARY
          if [ -f test-results.xml ]; then
            tests=$(grep -o 'tests="[0-9]*"' test-results.xml | cut -d'"' -f2)
            failures=$(grep -o 'failures="[0-9]*"' test-results.xml | cut -d'"' -f2)
            errors=$(grep -o 'errors="[0-9]*"' test-results.xml | cut -d'"' -f2)
            passed=$((tests - failures - errors))
            
            echo "- **Total Tests**: $tests" >> $GITHUB_STEP_SUMMARY
            echo "- **Passed**: $passed ✅" >> $GITHUB_STEP_SUMMARY
            echo "- **Failed**: $failures ❌" >> $GITHUB_STEP_SUMMARY
            echo "- **Errors**: $errors ⚠️" >> $GITHUB_STEP_SUMMARY
            
            if [ "$failures" -gt 0 ] || [ "$errors" -gt 0 ]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "### Failed Tests:" >> $GITHUB_STEP_SUMMARY
              grep -A 10 '<failure\|<error' test-results.xml | head -20 >> $GITHUB_STEP_SUMMARY || true
              exit 1
            fi
          else
            echo "❌ No test results found" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-test-results
          path: test-results.xml