name: CI - Unit & Selenium Tests

on:
  push:
    branches: [main, fleet-enhancements]
  pull_request:
    branches: [main, fleet-enhancements]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v4
        with:
          clean: true

      # Debug: Show workspace contents after checkout
      - name: Debug - Workspace after checkout
        run: |
          echo "[DEBUG] Workspace contents after checkout:" && ls -la

      # Set up Python
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Debug: Show Python version
      - name: Debug - Python version
        run: |
          echo "[DEBUG] Python version:" && python --version

      # Install dependencies
      - name: Install Python dependencies
        run: pip install -r requirements.txt

      # Debug: List installed packages
      - name: Debug - List installed packages
        run: |
          echo "[DEBUG] Installed pip packages:" && pip list

      # Run unit tests with coverage and output results
      - name: Run unit tests with coverage
        run: |
          mkdir -p artifacts/unit
          pytest --junitxml=artifacts/unit/unit-test-results.xml \
                 --cov=tests --cov-report=xml:artifacts/unit/coverage.xml \
                 --cov-report=term-missing

      # Debug: Show unit test artifacts
      - name: Debug - Unit test artifacts
        run: |
          echo "[DEBUG] Contents of artifacts/unit:" && ls -la artifacts/unit || echo "artifacts/unit not found"
          echo "[DEBUG] unit-test-results.xml head:" && head -20 artifacts/unit/unit-test-results.xml || echo "unit-test-results.xml not found"
          echo "[DEBUG] coverage.xml head:" && head -20 artifacts/unit/coverage.xml || echo "coverage.xml not found"

      # Show unit test summary in Actions summary tab
      - name: Unit test summary
        run: |
          echo '## Unit Test Results' >> $GITHUB_STEP_SUMMARY
          if [ -f artifacts/unit/unit-test-results.xml ]; then
            python3 scripts/generate_unit_report.py --xml artifacts/unit/unit-test-results.xml --cov artifacts/unit/coverage.xml --out /tmp/unit_summary.txt >> $GITHUB_STEP_SUMMARY || echo 'Unit test summary generation failed.' >> $GITHUB_STEP_SUMMARY
          else
            echo 'No unit test results found.' >> $GITHUB_STEP_SUMMARY
          fi

      # Run Selenium tests and output results
      - name: Run Selenium tests
        run: |
          mkdir -p artifacts/selenium
          pytest tests/selenium_tests/ --junitxml=artifacts/selenium/selenium-test-results.xml

      # Debug: Show Selenium test artifacts
      - name: Debug - Selenium test artifacts
        run: |
          echo "[DEBUG] Contents of artifacts/selenium:" && ls -la artifacts/selenium || echo "artifacts/selenium not found"
          echo "[DEBUG] selenium-test-results.xml head:" && head -20 artifacts/selenium/selenium-test-results.xml || echo "selenium-test-results.xml not found"

      # Show Selenium test summary in Actions summary tab
      - name: Selenium test summary
        run: |
          echo '## Selenium Test Results' >> $GITHUB_STEP_SUMMARY
          if [ -f artifacts/selenium/selenium-test-results.xml ]; then
            python3 scripts/generate_selenium_report.py --xml artifacts/selenium/selenium-test-results.xml --out /tmp/selenium_summary.txt >> $GITHUB_STEP_SUMMARY || echo 'Selenium test summary generation failed.' >> $GITHUB_STEP_SUMMARY
          else
            echo 'No Selenium test results found.' >> $GITHUB_STEP_SUMMARY
          fi

      # Show coverage summary in Actions summary tab
      - name: Coverage summary
        run: |
          echo '## Coverage Report' >> $GITHUB_STEP_SUMMARY
          if [ -f artifacts/unit/coverage.xml ]; then
            coverage report --data-file=artifacts/unit/coverage.xml >> $GITHUB_STEP_SUMMARY || echo 'Coverage summary failed.' >> $GITHUB_STEP_SUMMARY
          else
            echo 'No coverage file found.' >> $GITHUB_STEP_SUMMARY
          fi

      # Optionally upload coverage.xml as an artifact (for local download)
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: artifacts/unit/coverage.xml
