name: "TransPort CI: Unit, Integration & Selenium Tests"

on:
  push:
    branches: [main, fleet-enhancements]
  pull_request:
    branches: [main, fleet-enhancements]

jobs:
  unit-tests:
    name: Unit & Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Run unit tests with coverage
        run: |
          mkdir -p artifacts/unit
          pytest --junitxml=artifacts/unit/unit-test-results.xml \
                 --cov=. \
                 --cov-report=term-missing \
                 --ignore=tests/selenium_tests/
      - name: Upload unit .coverage data
        uses: actions/upload-artifact@v4
        with:
          name: unit-coverage-data
          path: .coverage

  selenium-tests:
    name: Selenium End-to-End Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install Python dependencies
        run: pip install -r requirements.txt
      - name: Run Selenium tests
        run: |
          mkdir -p artifacts/selenium
          pytest tests/selenium_tests/ -n auto --durations=10 --tb=short --disable-warnings --junitxml=artifacts/selenium/selenium-test-results.xml --cov=. --cov-append --cov-report=term-missing
        continue-on-error: true
      - name: Upload Selenium test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: selenium-test-results
          path: artifacts/selenium/
      - name: Upload selenium .coverage data
        uses: actions/upload-artifact@v4
        with:
          name: selenium-coverage-data
          path: .coverage

  coverage-report:
    name: Coverage Report & Summary
    runs-on: ubuntu-latest
    needs: [unit-tests, selenium-tests]
    if: always()
    steps:
      - uses: actions/checkout@v4
      - name: Download unit .coverage data
        uses: actions/download-artifact@v4
        with:
          name: unit-coverage-data
          path: artifacts/unit/
      - name: Download selenium .coverage data
        uses: actions/download-artifact@v4
        with:
          name: selenium-coverage-data
          path: artifacts/selenium/
      - name: Combine coverage and generate report
        if: always()
        run: |
          coverage combine artifacts/unit/.coverage artifacts/selenium/.coverage
          coverage html -d tests/reports
          coverage xml -o artifacts/unit/coverage.xml
          python3 scripts/coverage_to_md.py artifacts/unit/coverage.xml >> $GITHUB_STEP_SUMMARY
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: html-coverage-report
          path: tests/reports/
