name: Selenium UI Tests

on:
  push:
    branches: [main, develop, fleet-enhancements]
  pull_request:
    branches: [main, develop]

env:
  CACHE_VERSION: v1

# Minimal permissions needed
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  selenium-tests:
    name: Selenium UI Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.CACHE_VERSION }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.CACHE_VERSION }}-
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: selenium-tests:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Run tests and output results
        run: |
          mkdir -p test_results
          docker run --rm \
            -v ${{ github.workspace }}/test_results:/app/test_results \
            --name selenium-test-run \
            selenium-tests:latest

      - name: Publish Test Results Summary
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Selenium UI Tests
          path: test_results/results.xml
          reporter: java-junit
          fail-on-error: false

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: selenium-test-results-${{ github.run_number }}
          path: test_results/
          retention-days: 30

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              let comment = `## üåê Selenium Test Results - Run #${{ github.run_number }}\n\n`;
              
              // Add basic test summary from XML
              const xmlPath = path.join('test_results', 'results.xml');
              if (fs.existsSync(xmlPath)) {
                const xml = fs.readFileSync(xmlPath, 'utf8');
                const testMatch = xml.match(/tests="(\d+)"/);
                const failureMatch = xml.match(/failures="(\d+)"/);
                const errorMatch = xml.match(/errors="(\d+)"/);
                
                if (testMatch) {
                  const total = testMatch[1];
                  const failures = failureMatch ? failureMatch[1] : '0';
                  const errors = errorMatch ? errorMatch[1] : '0';
                  const passed = total - failures - errors;
                  
                  comment += `**Summary**: ${passed}/${total} tests passed `;
                  if (failures > 0 || errors > 0) {
                    comment += `‚ùå (${failures} failures, ${errors} errors)\n\n`;
                  } else {
                    comment += `‚úÖ\n\n`;
                  }
                  
                  // Add failure details if any
                  if (failures > 0 || errors > 0) {
                    comment += `### üîç Test Details\n`;
                    comment += `- **Failures**: ${failures}\n`;
                    comment += `- **Errors**: ${errors}\n\n`;
                  }
                }
              } else {
                comment += `‚ùå **No test results found**\n\n`;
              }
              
              comment += `üìä **View Details**: [Test Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Error posting comment:', error);
            }

  # Deploy to GitHub Pages (only from main branch)
  deploy-pages:
    name: Deploy Test Reports
    runs-on: ubuntu-latest
    needs: selenium-tests
    # Only deploy from main branch pushes
    if: always() && github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    # Required permissions for GitHub Pages
    permissions:
      pages: write
      id-token: write
      contents: read
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: selenium-test-results-${{ github.run_number }}
          path: test_results

      - name: Create reports directory structure
        run: |
          mkdir -p reports/selenium
          cp -r test_results/* reports/selenium/
          
          # Create index page
          cat > reports/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Selenium Test Reports - Build #${{ github.run_number }}</title>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <style>
                  body { 
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
                      margin: 0; 
                      padding: 40px; 
                      background: #f6f8fa; 
                  }
                  .container { 
                      max-width: 800px; 
                      margin: 0 auto; 
                      background: white; 
                      border-radius: 12px; 
                      box-shadow: 0 1px 3px rgba(0,0,0,0.1); 
                      overflow: hidden; 
                  }
                  .header { 
                      background: linear-gradient(135deg, #0969da, #0860ca); 
                      color: white; 
                      padding: 30px; 
                      text-align: center; 
                  }
                  .header h1 { margin: 0; font-size: 28px; }
                  .header p { margin: 10px 0 0; opacity: 0.9; }
                  .content { padding: 30px; }
                  .section { margin-bottom: 30px; }
                  .section h2 { color: #24292f; margin-bottom: 15px; }
                  .link { 
                      display: inline-block; 
                      padding: 12px 24px; 
                      background: #0969da; 
                      color: white; 
                      text-decoration: none; 
                      border-radius: 6px; 
                      font-weight: 500;
                      transition: background 0.2s;
                  }
                  .link:hover { background: #0860ca; }
                  .info { 
                      background: #f6f8fa; 
                      padding: 20px; 
                      border-radius: 6px; 
                      margin-bottom: 20px; 
                  }
                  .timestamp { color: #656d76; font-size: 14px; }
              </style>
          </head>
          <body>
              <div class="container">
                  <div class="header">
                      <h1>üåê Selenium Test Reports</h1>
                      <p>Build #${{ github.run_number }}</p>
                  </div>
                  
                  <div class="content">
                      <div class="info">
                          <strong>Commit:</strong> ${{ github.sha }}<br>
                          <strong>Branch:</strong> ${{ github.ref_name }}<br>
                          <strong>Workflow:</strong> ${{ github.workflow }}<br>
                          <div class="timestamp">Generated: $(date -u '+%Y-%m-%d %H:%M:%S UTC')</div>
                      </div>
                      
                      <div class="section">
                          <h2>üìä Test Reports</h2>
                          <a href="selenium/report.html" class="link">View Selenium Test Report</a>
                      </div>
                      
                      <div class="section">
                          <h2>üîó Links</h2>
                          <p>
                              <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" class="link">GitHub Actions Run</a>
                              <a href="https://github.com/${{ github.repository }}" class="link">Repository</a>
                          </p>
                      </div>
                  </div>
              </div>
          </body>
          </html>
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
