name: 🌐 Selenium UI Tests

on:
  push:
    branches: [main, develop, fleet-enhancements]
  pull_request:
    branches: [main, develop]

env:
  CACHE_VERSION: v1

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  selenium-tests:
    name: 🌐 Selenium UI Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.CACHE_VERSION }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.CACHE_VERSION }}-
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: selenium-tests:latest
          cache-from: type=local,src=/tmp/.buildx-cache

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache || true

      - name: Run Selenium UI tests
        run: |
          mkdir -p test_results
          docker run --rm \
            -v ${{ github.workspace }}/test_results:/app/test_results \
            --name selenium-test-run \
            selenium-tests:latest

      - name: Display test results summary
        if: always()
        run: |
          echo "## ✅ Test Summary" >> $GITHUB_STEP_SUMMARY
          ls -lh test_results || echo "No test results found" >> $GITHUB_STEP_SUMMARY

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Selenium UI Tests
          path: test_results/results.xml
          reporter: java-junit
          fail-on-error: false

      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: selenium-test-results-${{ github.run_number }}
          path: test_results/

      - name: Comment PR with test results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            try {
              let comment = `## 🌐 Selenium Test Results - Run #${{ github.run_number }}\n\n`;
              const xmlPath = path.join('test_results', 'results.xml');
              if (fs.existsSync(xmlPath)) {
                const xml = fs.readFileSync(xmlPath, 'utf8');
                const total = parseInt(xml.match(/tests=\"(\d+)\"/)?.[1] || '0', 10);
                const failures = parseInt(xml.match(/failures=\"(\d+)\"/)?.[1] || '0', 10);
                const errors = parseInt(xml.match(/errors=\"(\d+)\"/)?.[1] || '0', 10);
                const passed = total - failures - errors;

                comment += `**Summary**: ${passed}/${total} tests passed `;
                comment += (failures > 0 || errors > 0)
                  ? `❌ (${failures} failures, ${errors} errors)\n\n`
                  : `✅\n\n`;
              } else {
                comment += `❌ **No test results found**\n\n`;
              }
              comment += `📊 **View Details**: [Test Results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n`;
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.error('Error posting comment:', error);
            }
